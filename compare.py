import sys
import re

def read_file(filename):
	lines = []

	process_line = False

	with open(filename, 'rb') as file:
		for line in file:
			if 'ENTER Analysis Results' in line:
				process_line = True
			elif 'LEAVE Analysis Results' in line:
				process_line = False
			elif process_line:
				lines.append(line)

	return lines

def process_quad_list(line):
	array = []

	if line.find('<') > 0:
		while line.find('<') > 0:
			quad = line[line.find("<"):line.find(">")+1]
			array.append(quad)
			line = line.replace(quad, '')
	else:
		line = line.replace('IN', '').replace('OUT', '').replace(':', '')
		array = line.split()
			
	array.sort()

	result = ""
	for i in array:
		result += i

	return result


def process_lines(lines):
	quads = []
	index = 0

	while len(lines) > index:
		line = lines[index]

		name = line[line.find("[", 20):line.find("]")+1]
		inMap = process_quad_list(lines[index+1])
		outMap = process_quad_list(lines[index+2])

		quads.append(name + "|" + inMap + "|" + outMap)

		index+=3

	quads.sort()
	return quads
	

def compare(lines_base, lines_log):
	quads_base = process_lines(lines_base)
	quads_log = process_lines(lines_log)

	if len(quads_base) == len(quads_log):
		index = 0
		while index < len(quads_base):
			qb = quads_base[index]
			ql = quads_log[index]

			if qb != ql:
				print "Results do not match. Expected " + qb + " but found " + ql			
				break	

			index = index + 1

		if index == len(quads_base):
			print "Results match."

	else:
		print "Results do not match. The number of quads is different."

def main():
	if len(sys.argv) != 3:
		print ""
		print "Usage: $ python compare.py base.txt log.txt"
		print "Where base.txt is the result file provided by the instructors that will serve as the base of comparison, and log.txt is the log file generated by you running your algorithm."
		print ""

		return

	lines_base = read_file(sys.argv[1])
	lines_log = read_file(sys.argv[2])

	compare(lines_base, lines_log)

main()
