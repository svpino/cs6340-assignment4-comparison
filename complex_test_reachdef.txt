********** ENTER Analysis Results **********
-75!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [75: PHI R22, (R19, R33), { BB5, BB13 }]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
69!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [65: ADD_I R31, R27, IConst: 1]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
60!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [59: IFCMP_I R27, T29, GE, BB11]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
11!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:4) [4: MOVE_A R3, T14]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <2: MOVE_A R2, T13, R2> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
	OUT:<1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
24!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:7) [49: ADD_I R18, R16, IConst: 1]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
84!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:21) [55: ASTORE_L R33, R3, R21]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
-76!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [76: PHI R28, (R22, R30), { BB8, BB10 }]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
17!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:7) [37: IFCMP_I R16, T17, GE, BB5]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
67!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:15) [63: ADD_L T12, R28, T11]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
47!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:13) [69: REM_I T25, T24, IConst: 2]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
66!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:15) [62: INT_2LONG T11, R27]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
27!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:7) [50: GOTO BB3]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
79!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:18) [73: MOVE_L R32, LConst: 0]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
59!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [58: ALOAD_I T29, R2, R21]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
9!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:4) [3: NEWARRAY T14, IConst: 10000, long[]]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <2: MOVE_A R2, T13, R2> 
	OUT:<1: NEWARRAY T13, IConst: 10000, int[], T13> <2: MOVE_A R2, T13, R2> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
38!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:12) [60: ARRAYLENGTH T23, R2]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
85!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:12) [56: ADD_I R34, R21, IConst: 1]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
3!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:3) [1: NEWARRAY T13, IConst: 10000, int[]]
	IN :
	OUT:<1: NEWARRAY T13, IConst: 10000, int[], T13> 
48!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:13) [70: IFCMP_I T25, IConst: 0, NE, BB12]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
-78!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [78: PHI R21, (R20, R34), { BB5, BB13 }]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
45!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:13) [68: ALOAD_I T24, R2, R21]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
72!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [66: GOTO BB9]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
-74!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [74: PHI R16, (R15, R18), { BB2, BB4 }]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
13!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:7) [5: MOVE_I R15, IConst: 0]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
-77!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [77: PHI R33, (R28, R32), { BB11, BB12 }]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
52!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [72: MOVE_I R26, IConst: 0]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
91!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:24) [71: RETURN_V]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
68!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:15) [64: MOVE_L R30, T12]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
33!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:12) [52: MOVE_I R20, IConst: 0]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <51: MOVE_L R19, LConst: 0, R19> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<52: MOVE_I R20, IConst: 0, R20> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <51: MOVE_L R19, LConst: 0, R19> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
31!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:11) [51: MOVE_L R19, LConst: 0]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <51: MOVE_L R19, LConst: 0, R19> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
75!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:14) [67: GOTO BB13]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
23!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:8) [48: ASTORE_I R16, R2, R16]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
16!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:7) [36: ARRAYLENGTH T17, R2]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <3: NEWARRAY T14, IConst: 10000, long[], T14> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> 
	OUT:<5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <4: MOVE_A R3, T14, R3> <2: MOVE_A R2, T13, R2> <36: ARRAYLENGTH T17, R2, T17> <49: ADD_I R18, R16, IConst: 1, R18> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <3: NEWARRAY T14, IConst: 10000, long[], T14> 
39!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:12) [61: IFCMP_I R21, T23, GE, BB14]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
88!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:12) [57: GOTO BB6]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
5!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:3) [2: MOVE_A R2, T13]
	IN :<1: NEWARRAY T13, IConst: 10000, int[], T13> 
	OUT:<1: NEWARRAY T13, IConst: 10000, int[], T13> <2: MOVE_A R2, T13, R2> 
-79!main:([Ljava/lang/String;)V@ComplexTest (ComplexTest.java:0) [79: PHI R27, (R26, R31), { BB8, BB10 }]
	IN :<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <73: MOVE_L R32, LConst: 0, R32> <63: ADD_L T12, R28, T11, T12> <1: NEWARRAY T13, IConst: 10000, int[], T13> <5: MOVE_I R15, IConst: 0, R15> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <64: MOVE_L R30, T12, R30> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <69: REM_I T25, T24, IConst: 2, T25> <2: MOVE_A R2, T13, R2> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
	OUT:<4: MOVE_A R3, T14, R3> <58: ALOAD_I T29, R2, R21, T29> <36: ARRAYLENGTH T17, R2, T17> <60: ARRAYLENGTH T23, R2, T23> <63: ADD_L T12, R28, T11, T12> <73: MOVE_L R32, LConst: 0, R32> <5: MOVE_I R15, IConst: 0, R15> <1: NEWARRAY T13, IConst: 10000, int[], T13> <65: ADD_I R31, R27, IConst: 1, R31> <78: PHI R21, (R20, R34), { BB5, BB13 }, R21> <75: PHI R22, (R19, R33), { BB5, BB13 }, R22> <64: MOVE_L R30, T12, R30> <77: PHI R33, (R28, R32), { BB11, BB12 }, R33> <74: PHI R16, (R15, R18), { BB2, BB4 }, R16> <76: PHI R28, (R22, R30), { BB8, BB10 }, R28> <2: MOVE_A R2, T13, R2> <69: REM_I T25, T24, IConst: 2, T25> <51: MOVE_L R19, LConst: 0, R19> <56: ADD_I R34, R21, IConst: 1, R34> <3: NEWARRAY T14, IConst: 10000, long[], T14> <62: INT_2LONG T11, R27, T11> <79: PHI R27, (R26, R31), { BB8, BB10 }, R27> <52: MOVE_I R20, IConst: 0, R20> <72: MOVE_I R26, IConst: 0, R26> <49: ADD_I R18, R16, IConst: 1, R18> <68: ALOAD_I T24, R2, R21, T24> 
********** LEAVE Analysis Results **********

